using SixLabors.ImageSharp;
using SixLabors.ImageSharp.PixelFormats;
using System;

namespace Zkwip.EPIC
{
    internal class CodeFileGeneration
    {
        private static string GenerateChannelCode(DataChannel channel, int perLine = 16)
        {
            string res = $"\nconst unsigned char {channel.ChannelName}[] = {{";

            for (int i = 0; i < channel.ByteCount; i++)
            {
                res += String.Format("0x{0:x2}, ", channel[i]);

                if (i % perLine == perLine - 1)
                    res += "\n";
            }

            return res + "};\n";
        }

        private static string GenerateFileStart(Profile profile)
        {
            return $"// Image constants generated by EPIC\n// Size = {{w:{profile.Width}, h:{profile.Height}}}\n";
        }

        internal static string BuildImageCode(Image<Rgb24> img, Profile profile)
        {
            var channels = new DataChannel[profile.Channels];
            for (int i = 0; i < profile.Channels; i++)
            {
                channels[i] = new DataChannel(profile, i);
            }

            foreach ((int x, int y) in profile.Pixels())
            {
                var bits = profile.GetClosestPaletteColor(img[x, y]);

                foreach (DataChannel channel in channels)
                {
                    channel[x, y] = bits[channel.ChannelId];
                }
            }

            string res = GenerateFileStart(profile);

            for (int c = 0; c < profile.Channels; c++)
            {
                res += GenerateChannelCode(channels[c]);
            }

            return res;
        }
    }
}